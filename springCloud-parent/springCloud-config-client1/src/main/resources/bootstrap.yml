#为什么下面这些信息必须放在 bootstrap.yml 或者bootstrap.properties中?

    #这是由spring boot的加载属性文件的优先级决定的，你想要在加载属性之前去spring cloud config server上取配置文件，那spring cloud config相关配置就是需要最先加载的，
    #而bootstrap.properties的加载是先于application.properties的，所以config client要配置config的相关配置就只能写到bootstrap.properties里了

server:
  port: 7077  #该服务端口号


spring:
  application:
    name: config-client  #该服务的服务名称  (同一个服务名不同端口号服务的可以被负载均衡使用) 


  cloud:
    config:
      discovery:
        enabled: true  ##表示开启通过服务名来访问config-server
        service-id: config-server   #指定 config服务的server-id
      profile: test   # config-client-test.yml   这个文件名是通过  spring.application.name-spring.cloud.config.profile 的出来的配置的文件名
      fail-fast: true    #启动失败时能够快速响应

      #和重试机制相关的配置有如下四个：
      retry: 
        max-attempts: 6  # 配置重试次数，默认为6
        multiplier: 1.1  # 下一次重试间隔时间的乘数，比如开始1000，下一次就是1000*1.1=1100
        initial-interval: 1000  # 初始重试间隔时间，默认1000ms
        max-interval: 2000  # 最大间隔时间，默认2000ms

#  cloud:
#    config:
 #     username: 603552334@qq.com   #码云账号
#      password: lhq940502          #码云密码
 #     failFast: false
#      url: http://localhost:8888
 #     profile: dev,zuul # config-client-dev.yml
 #     name: config-client
#     label: client-label
 #     # name: config-client2 # config-client2-dev.yml
 #     # 没有 cloud.config.name，也没有 application.name，则读取 application-dev.yml




#忽略权限拦截
management:
  security: 
    enabled: false          
          
#下面这段服务是把该服务（config-client）注册到eureka
eureka:
  instance:
    lease-renewal-interval-in-seconds: 5      # 心跳时间，即服务续约间隔时间（缺省为30s） 表示eureka client发送心跳给server端的间隔时间。
    lease-expiration-duration-in-seconds: 15  # 发呆时间，即服务续约到期时间（缺省为90s） server至上次接受到client心跳之后在15秒之内没收到心跳则摘除该instance
                                              
  client:
    registry-fetch-interval-seconds: 10 # 拉取服务注册信息间隔（缺省为30s）
    service-url:
      defaultZone: http://localhost:7070/eureka/   #注册中心服务地址。把config-client 注册到这个注册中心，如果Eurkea集群的话，在后面加逗号分隔